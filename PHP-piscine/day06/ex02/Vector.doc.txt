
<- Vector ----------------------------------------------------------------------
The Vector class handles space 3D Vectors.
More than three coordinates, it has got a homogenous parameter (defaults to 0).

An instance is contructed from two Vertex orig and dest.
It represents then the vector between those two points.
new Vector( array( 'dest' => #instanceOfVertex, 'orig' => #instanceOfVertex );
If the vertex 'orig' is not precised, it will then be (0,0,0,1) as default.
Any other usage causes undefined behaviour! 



Accessible attributes*:

Vertex::$verbose:
is a Boolean static attribute provided to control the displays 
related to the use of the Class. This attribute is initially False. 
User should set verbose to True to see displays:
Vertex::$verbose = False;



Other attributes are private. The class provides reading accessors for the 
corresponding attributes:

Vector  getX(); / getY();  / getZ(); / getW();

When a Vector is created, you wont be able to change its values after.
aka-> no setters;



The following methodes are provided for this Class:

- magnitude() : give the norme of the instanced Vector.

- normalize() : give the normalized Vector correspondig (a fresh copy
if the instance was already normalized)

- add( Vector $v ) : give the result of the addition between
the current instance and $.

- sub( Vector $v ) : give the result of the substraction between
the current instance and $.

- opposite() : return the opposite Vector;

- scalarProduct( $k ) : return the product of the constant $k
and the current instance;

- dotProduct( Vector $v ) : return the scalar product of the current
instance and $v;

- cos( Vector $v ) : return the cosinus between the current instance and $v;

- crossProduct( Vector $rhs ) : return the cross product
(right handed set) of the current instance and $v;

-Vector::doc() :
is a static method returns the documentation of the class in a string.
---------------------------------------------------------------------- Vector ->
